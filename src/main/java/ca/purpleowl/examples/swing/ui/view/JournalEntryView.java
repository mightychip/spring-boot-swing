package ca.purpleowl.examples.swing.ui.view;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import java.awt.*;

/**
 * This view is for displaying or writing a Journal Entry.  Just a simple JTextArea with an action button for either
 * saving the record or closing the view.
 */
public abstract class JournalEntryView {
    private JPanel entryPanel;
    private JTextArea journalEntry;
    private JButton actionButton;

    protected JournalEntryView() {
        actionButton.addActionListener(e -> actionButtonClicked());
    }

    protected abstract void actionButtonClicked();

    public void setText(String text) {
        journalEntry.setText(text);
    }

    public String getText() {
        return journalEntry.getText();
    }

    /**
     * Enable View Mode, which just makes the JTextArea non-editable and sets the text of the Action Button to "Close."
     */
    public void viewMode() {
        journalEntry.setEditable(false);
        actionButton.setText("Close");
    }

    public void writeMode() {
        journalEntry.setEditable(true);
        actionButton.setText("Save");
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        entryPanel = new JPanel();
        entryPanel.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        entryPanel.setPreferredSize(new Dimension(500, 450));
        entryPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Ugly Journal Entry"));
        journalEntry = new JTextArea();
        entryPanel.add(journalEntry, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        entryPanel.add(panel1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        actionButton = new JButton();
        actionButton.setText("Button");
        panel1.add(actionButton, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return entryPanel;
    }
}
